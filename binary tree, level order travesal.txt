Level Order Traversal of a Tree in java
====================================================
 public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if (root == null){
            return ans;
        }
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            int size = q.size();
            List<Integer> list = new ArrayList<>();
            for (int i = 0;i<size;i++){
                TreeNode node = q.remove();
                list.add(node.val);
                if (node.left != null) q.add(node.left);
                if (node.right != null) q.add(node.right);
            }
            ans.add(list);
        }
        return ans;
    }


Level Order Traversal of a Tree in JS
==========================================
let ans = [];
    if (root == null){
        return ans;
    }
    let queue = [];
    queue.push(root);
    while(queue.length != 0){
        let size = queue.length;
        let list = [];
        for (let i = 0;i<size;i++){
            let node = queue.shift();
            list.push(node.val);
            if (node.left != null) queue.push(node.left);
            if (node.right != null) queue.push(node.right);
        }
        ans.push(list);
    }
    return ans;