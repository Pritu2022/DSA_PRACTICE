https://leetcode.com/problems/combination-sum-ii/



class Solution {
    public List<List<Integer>> combinationSum2(int[] A, int target) {
     List<List<Integer>> res = new ArrayList<>();
        //sort the array for required output;
        Arrays.sort(A);
        getcombinationSum(res, A, new ArrayList(), target,0);
           return res;
    }

    public void getcombinationSum(List<List<Integer>> res, int[] A, List<Integer> list, int target, int         start) {
        
        if(target<0) return;
        if(target==0){
            res.add(new ArrayList<>(list)); return;
        }

        for(int i=start;i< A.length;i++){
            list.add(A[i]);
            getcombinationSum(res, A, list,target-A[i], i+1);
            list.remove(list.size()-1);
            // check for any duplicate in array to avoid duplicate result
            while(i<A.length-1 && A[i] == A[i+1]){
                i++;
            }
        }
        
    }
}
